name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Check pnpm version
        run: pnpm --version
      
      - name: Install dependencies
        working-directory: ./electron-app
        # Use frozen lockfile to ensure deterministic installs (matches repo pnpm-lock.yaml)
        run: pnpm install --frozen-lockfile
      
      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        working-directory: ./electron-app
        # For CI signing/notarization, set these secrets in repository settings and uncomment:
        # env:
        #  CSC_LINK: ${{ secrets.CSC_LINK }}
        #  CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: pnpm run electron:build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ./electron-app
        run: pnpm run electron:build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        working-directory: ./electron-app
        run: pnpm run electron:build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            electron-app/dist-electron/*.dmg
            electron-app/dist-electron/*.zip
      
      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            electron-app/dist-electron/*.exe
      
      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            electron-app/dist-electron/*.AppImage
            electron-app/dist-electron/*.deb
            electron-app/dist-electron/*.snap
  
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    permissions:
      contents: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macos-build/*
            windows-build/*
            linux-build/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}